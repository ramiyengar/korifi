apiVersion: v1
kind: Namespace
metadata:
  name: korifi-api-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: korifi-api-cf-admin-serviceaccount
  namespace: korifi-api-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: korifi-api-cf-admin-clusterrole
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets/status
  - serviceaccounts/status
  verbs:
  - get
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - hnc.x-k8s.io
  resources:
  - hierarchyconfigurations
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - hnc.x-k8s.io
  resources:
  - subnamespaceanchors
  verbs:
  - create
  - delete
  - list
  - watch
- apiGroups:
  - kpack.io
  resources:
  - clusterbuilders
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kpack.io
  resources:
  - clusterbuilders/status
  verbs:
  - get
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfdomains
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfdomains/status
  verbs:
  - get
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfroutes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfroutes/status
  verbs:
  - get
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - list
- apiGroups:
  - services.cloudfoundry.org
  resources:
  - cfservicebindings
  verbs:
  - create
  - delete
  - get
  - list
- apiGroups:
  - services.cloudfoundry.org
  resources:
  - cfserviceinstances
  verbs:
  - create
  - delete
  - get
  - list
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfapps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfapps/status
  verbs:
  - get
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfbuilds
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfbuilds/status
  verbs:
  - get
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cforgs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cforgs/status
  verbs:
  - get
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfpackages
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfpackages/status
  verbs:
  - get
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfprocesses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfprocesses/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: korifi-api-cf-admin-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: korifi-api-cf-admin-clusterrole
subjects:
- kind: ServiceAccount
  name: korifi-api-cf-admin-serviceaccount
  namespace: korifi-api-system
---
apiVersion: v1
data:
  korifi_api_config.yaml: |
    externalFQDN: "api.example.org"
    internalPort: 9000

    rootNamespace: cf
    defaultLifecycleConfig:
      type: buildpack
      stack: cflinuxfs3
      stagingMemoryMB: 1024
      stagingDiskMB: 1024
    packageRegistryBase: gcr.io/cf-relint-greengrass/korifi-controllers/kpack/beta
    packageRegistrySecretName: image-registry-credentials # Create this secret in the rootNamespace
    clusterBuilderName: cf-kpack-cluster-builder
    defaultDomainName: apps.example.org
  role_mappings_config.yaml: |
    roleMappings:
      admin:
        name: korifi-controllers-admin
        propagate: true
      admin_read_only:
        name: korifi-controllers-admin-read-only
        propagate: true
      cf_user:
        name: korifi-controllers-root-namespace-user
        propagate: false
      global_auditor:
        name: korifi-controllers-global-auditor
        propagate: true
      organization_auditor:
        name: korifi-controllers-organization-auditor
        propagate: false
      organization_billing_manager:
        name: korifi-controllers-organization-billing-manager
        propagate: false
      organization_manager:
        name: korifi-controllers-organization-manager
        propagate: true
      organization_user:
        name: korifi-controllers-organization-user
        propagate: false
      space_auditor:
        name: korifi-controllers-space-auditor
        propagate: false
      space_developer:
        name: korifi-controllers-space-developer
        propagate: false
      space_manager:
        name: korifi-controllers-space-manager
        propagate: false
      space_supporter:
        name: korifi-controllers-space-supporter
        propagate: false
kind: ConfigMap
metadata:
  name: korifi-api-config-f8ccbtc64g
  namespace: korifi-api-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: korifi-api
  name: korifi-api-svc
  namespace: korifi-api-system
spec:
  ports:
  - name: web
    port: 443
    protocol: TCP
    targetPort: web
  selector:
    app: korifi-api
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: korifi-api
  name: korifi-api-deployment
  namespace: korifi-api-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: korifi-api
  strategy: {}
  template:
    metadata:
      labels:
        app: korifi-api
    spec:
      containers:
      - env:
        - name: APICONFIG
          value: /etc/korifi-api-config
        image: cloudfoundry/korifi-api:latest
        name: korifi-api
        ports:
        - containerPort: 9000
          name: web
        resources: {}
        volumeMounts:
        - mountPath: /etc/korifi-api-config
          name: korifi-api-config
          readOnly: true
      serviceAccountName: korifi-api-cf-admin-serviceaccount
      volumes:
      - configMap:
          name: korifi-api-config-f8ccbtc64g
        name: korifi-api-config
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  labels:
    app: korifi-api
  name: korifi-api-proxy
  namespace: korifi-api-system
spec:
  routes:
  - conditions:
    - prefix: /
    services:
    - name: korifi-api-svc
      port: 443
    timeoutPolicy:
      response: 5m
  virtualhost:
    fqdn: ""
    tls:
      secretName: korifi-api-ingress-cert
